Test all the GUI components and the expected results:

1. If an empty field is clicked or typed into, then its state label should display a message saying that the browse button should be used to enter a file path into the field if needed

2. If a non-empty field is clicked of typed into, then its state label should display a message saying that the browse button should be used to change the content of the field if needed

3. When the main GUI window is closed a new window should appear which should offer to delete the files generated by XmlDiff on the user machine or not(the log file). If "yes" is chosen the files should be deleted, else the files should still be there after the application closes. All the open windows should be successfully closed after closing this cleanup window.

4. The reset button must reset only the filed holding the path to the configuration file and all the field states.

5. When the processing button is clicked its state label should reflect its processing state: currently "processing" or "processing finished" successfully or not. When the processing has finished a link should be appended to the state message that should open the result of the processing in a new window: show the processed data or the content of the log file.

6. All windows should be re-sizable.

7. The file chooser should remember/use the last searched location.

8. When opening a new window the information messages should not be removed from the parent window.
They should be reset only when clicking on another component inside the parent window. This gives the user the chance to reuse them without having to trigger them again.

9. Requesting the Help window several times should display in each window the content of the XmlDiff's help file, and not an empty or different content.

10. The content of the log file should reflect only the problems that occurred in the last processing.
Should emptied by te application if it's already present at its start up.

11. TODO: It should be possible to open multiple isolated instances of the application on the same machine.

12. All fields should be disabled and access to them can be reached only through the browse buttons




*****************************************************************************************
Test the input-output expectations by using various test file combinations (from the test folder).




*****************************************************************************************
Do cross-platform tests on Ubuntu, Fedora and Windows:

1. The functionality should be the same as above.



*****************************************************************************************
Test at different monitor resolutions:

1. The GUI's components should be all still accessible.