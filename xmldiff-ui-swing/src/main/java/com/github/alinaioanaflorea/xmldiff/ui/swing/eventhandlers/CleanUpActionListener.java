/*
Copyright (C) 2012 Alina Ioana Florea (alina.ioana.florea@gmail.com)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

http://www.opensource.org/licenses/mit-license.php
*/

package com.github.alinaioanaflorea.xmldiff.ui.swing.eventhandlers;

import com.github.alinaioanaflorea.xmldiff.ui.swing.common.Utilities;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.BoxLayout;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

/**
 * This class cleans the files generated by XmlDiff on the user's machine
 */
public class CleanUpActionListener implements ActionListener {

    // The JFrame that triggered this event
    private JFrame sourceFrame = null;

    /**
     * Ctor
     * @param sourceFrame The JFrame that triggered this event
     */
    public CleanUpActionListener(JFrame sourceFrame) {

        this.sourceFrame = sourceFrame;
    }

    @Override
    public void actionPerformed(ActionEvent event) {

        // Delete the files generated by XmlDiff on the user's machine
        boolean fileDeleted = deleteFile(Utilities.PATH_FILE_LOG);

        JLabel outputMsg;
        if (fileDeleted) {

            outputMsg = new JLabel("Cleanup finished successfully.");
        }
        else {

            outputMsg = new JLabel("Could not find or delete the log file. You can try to find it manually at: \n" + Utilities.PATH_FILE_LOG);
        }

        // Write the output message in the window that triggered this event
        JPanel windowContent = new JPanel();
        windowContent.setLayout(new BoxLayout(windowContent, BoxLayout.Y_AXIS));
        windowContent.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        windowContent.add(outputMsg);
        
        sourceFrame.getContentPane().removeAll();
        sourceFrame.getContentPane().add(BorderLayout.CENTER, windowContent);
        sourceFrame.revalidate();   // Refresh the window
    }

    private boolean deleteFile(String pathToFile) {

        File file = new File(pathToFile);

        try {

            return (!file.exists() || file.delete());
        }
        catch (Exception e) {

            return false;
        }
    }
}
